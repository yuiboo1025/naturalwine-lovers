<div class="container justify-content-center">
  
<%= form_with model: spot, url:method do |f| %>
  <div class="actions">
    <%= f.label :spot_name,"店名" %>
    <%= f.text_field :spot_name %>
    <%= f.label :address,"住所" %>
    <%= f.text_field :address %>
    <%= f.label :lat,"緯度" %>
    <%= f.text_field :lat, id: :lat %>
    <%= f.label :lng,"経度" %>
    <%= f.text_field :lng, id: :lng %>
    <% if params[:wine_id].present? %>
      <%= f.hidden_field :wine_id, :value => wine_id %>
    <% end %>
    <%= f.submit %>
  </div>
<% end %>

<h2>Map</h2>

<%#検索フォーム %>
<input id="address" type="textbox" value="">
<input type="button" value="検索" onclick="codeAddress()">
<p>マーカーをドラック＆ドロップで位置の調整ができます。<p>
<div id='map'></div>



<style>
#map {
  height: 800px;
  width: 800px;
}
</style>

</div>

<script>
//初期マップの設定
let map //変数の定義
let marker
let geocoder 
let service
function initMap(){  //コールバック関数
  geocoder = new google.maps.Geocoder()  //GoogleMapsAPIジオコーディングサービスにアクセス

  map = new google.maps.Map(document.getElementById('map'), { //'map'というidを取得してマップを表示
    center:  {lat: 35.6803997, lng:139.7690174},  //東京
    zoom: 12, //数値は0〜21まで指定でき、数値が大きいほど拡大される
  });
  
  //const input = document.getElementById("pac-input");
  //const autocomplete = new google.maps.places.Autocomplete(input);
  //autocomplete.bindTo("bounds", map);
  
  const request = {
    location: map,
    radius: 1000,      // ※１ 表示する半径領域を設定(1 = 1M)
    types: ['cafe'] 
  };
  service = new google.maps.places.PlacesService(myMap);
  service.search(request, Result_Places);
        
}

// 検索結果を受け取る
function Result_Places(results, status){
    // Placesが検家に成功したかとマうかをチェック
    if(status == google.maps.places.PlacesServiceStatus.OK) {
        for (let i = 0; i < results.length; i++) {
            // 検索結果の数だけ反復処理を変数placeに格納
            var place = results[i];
            createMarker({
                 text : place.name,
                 position : place.geometry.location
            });
        }
    }
}

//検索後のマップ作成
//let geocoder  
let aft
　//検索フォームのボタンが押された時に実行される
function codeAddress(){
  //検索フォームの入力内容を取得
  let inputAddress = document.getElementById('address').value;  //'address'というidの値（value）を取得
  geocoder.geocode( { 'address': inputAddress}, function(results, status) { //ジオコードしたい住所を引数として渡す
    //該当する検索結果がヒットした時
    if (status == 'OK') {
        //マーカーが複数できないようにする
        if (aft == true){
            marker.setMap(null);
        }

        //新しくマーカーを作成する
        map.setCenter(results[0].geometry.location);
            marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            draggable: true	// ドラッグ可能にする
        });

        //二度目以降か判断
        aft = true

        //検索した時に緯度経度を入力する
        document.getElementById('lat').value = results[0].geometry.location.lat();
        document.getElementById('lng').value = results[0].geometry.location.lng();

        // マーカーのドロップ（ドラッグ終了）時のイベント
        google.maps.event.addListener( marker, 'dragend', function(ev){
            // イベントの引数evの、プロパティ.latLngが緯度経度
            document.getElementById('lat').value = ev.latLng.lat();
            document.getElementById('lng').value = ev.latLng.lng();
        });
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyANVEZaOAVmsA5IxBWxHuUDOy-5qzjluGI&callback=initMap" async defer></script>